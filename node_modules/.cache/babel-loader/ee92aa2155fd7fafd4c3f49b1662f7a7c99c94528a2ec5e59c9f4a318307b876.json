{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5327645d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_CartDetail = _resolveComponent(\"CartDetail\");\n  const _component_Empty = _resolveComponent(\"Empty\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    title: \"购物车\",\n    edit: true\n  }), $setup.isShow ? (_openBlock(), _createBlock(_component_CartDetail, {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_Empty, {\n    key: 1\n  })), _createVNode(_component_Footer)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Header","title","edit","$setup","isShow","_createBlock","_component_CartDetail","key","_component_Empty","_component_Footer"],"sources":["D:\\vue3-projects\\vue-waimai\\src\\views\\cart\\CartIndex.vue"],"sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <Header title=\"购物车\" :edit=\"true\" />\r\n        <CartDetail v-if=\"isShow\" />\r\n        <Empty v-else />\r\n        <Footer></Footer>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Footer from '../../components/main-footer.vue';\r\nimport Empty from '../../components/EmptyIndex1.vue';\r\nimport Header from \"../../components/HeaderOf1.vue\";\r\nimport CartDetail from \"./components/CartDetail.vue\";\r\nimport { useStore } from \"vuex\"\r\nimport { onMounted, ref } from 'vue';\r\n\r\nexport default {\r\n    components: {\r\n        Footer,\r\n        Empty,\r\n        Header,\r\n        CartDetail\r\n    },\r\n    setup() {\r\n        const isShow = ref(true)\r\n        const store = useStore();\r\n\r\n        const init = () => {\r\n            if (store.state.cartList.length === 0) {\r\n                isShow.value = false;\r\n            }\r\n        };\r\n        onMounted(() => {\r\n            init();\r\n        });\r\n\r\n        return {\r\n            isShow,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cart {\r\n    display: flex;\r\n    flex-flow: column;\r\n    height: 100%;\r\n\r\n    .content {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n    }\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;;;;;;uBAAjBC,mBAAA,CAKM,OALNC,UAKM,GAJFC,YAAA,CAAmCC,iBAAA;IAA3BC,KAAK,EAAC,KAAK;IAAEC,IAAI,EAAE;MACTC,MAAA,CAAAC,MAAM,I,cAAxBC,YAAA,CAA4BC,qBAAA;IAHpCC,GAAA;EAAA,O,cAIQF,YAAA,CAAgBG,gBAAA;IAJxBD,GAAA;EAAA,KAKQR,YAAA,CAAiBU,iBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}