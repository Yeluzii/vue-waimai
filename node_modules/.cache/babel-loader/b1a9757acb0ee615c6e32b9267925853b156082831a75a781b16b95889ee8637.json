{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"food-list\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_tree_select = _resolveComponent(\"van-tree-select\");\n  return $props.index === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_van_tree_select, {\n    \"main-active-index\": _ctx.activeIndex,\n    \"onUpdate:mainActiveIndex\": _cache[0] || (_cache[0] = $event => _ctx.activeIndex = $event),\n    height: \"88vw\",\n    items: _ctx.items\n  }, {\n    content: _withCtx(() => [_createTextVNode(\"商品\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"main-active-index\", \"items\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($props.foodData.content), 1 /* TEXT */));\n}","map":{"version":3,"names":["key","class","$props","index","_createElementBlock","_hoisted_1","_createVNode","_component_van_tree_select","_ctx","activeIndex","_cache","$event","height","items","content","_withCtx","_createTextVNode","_","_hoisted_2","_toDisplayString","foodData"],"sources":["D:\\vue3-projects\\vue-waimai\\src\\views\\store\\components\\FoodList.vue"],"sourcesContent":["<template>\r\n  <div class=\"food-list\" v-if=\"index === 0\">\r\n    <van-tree-select v-model:main-active-index=\"activeIndex\" height=\"88vw\" :items=\"items\">\r\n      <template #content>商品</template>\r\n    </van-tree-select>\r\n  </div>\r\n\r\n  <div v-else>\r\n    {{ foodData.content }}\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\n\r\nexport default {\r\n  props: [\"index\", \"foodData\"],\r\n  setup() {\r\n    let data = reactive({\r\n      activeIndex: 0,\r\n      items: [{ text: \"分组 1\" }, { text: \"分组 2\" }],\r\n    });\r\n\r\n    // console.log('Items:', data.items);\r\n\r\n    // // 定义 newArray\r\n    // let newArray = [];\r\n\r\n    // // 初始化数据\r\n    // const initData = () => {\r\n    //   props.foodData.items.forEach((item,index) => {\r\n    //     newArray.push({\r\n    //       text: item.text\r\n    //     })\r\n    //   })\r\n    //   data.items = newArray;\r\n    // }\r\n    // // 写完调用一下\r\n    // initData();\r\n    return {\r\n      ...toRefs(data),\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EADbD,GAAA;AAAA;;;SAC+BE,MAAA,CAAAC,KAAK,U,cAAlCC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAEkBC,0BAAA;IAFO,mBAAiB,EAAEC,IAAA,CAAAC,WAAW;IAF3D,4BAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEgDH,IAAA,CAAAC,WAAW,GAAAE,MAAA;IAAEC,MAAM,EAAC,MAAM;IAAEC,KAAK,EAAEL,IAAA,CAAAK;;IAClEC,OAAO,EAAAC,QAAA,CAAC,MAAE,CAH3BC,gBAAA,CAGyB,IAAE,E;IAH3BC,CAAA;wEAOEb,mBAAA,CAEM,OATRc,UAAA,EAAAC,gBAAA,CAQOjB,MAAA,CAAAkB,QAAQ,CAACN,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}