{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_van_address_edit = _resolveComponent(\"van-address-edit\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header, {\n    title: $setup.address\n  }, null, 8 /* PROPS */, [\"title\"]), _createVNode(_component_van_address_edit, {\n    \"area-list\": _ctx.areaList,\n    \"show-delete\": \"\",\n    \"show-set-default\": \"\",\n    \"show-search-result\": \"\",\n    \"address-info\": _ctx.addressInfo,\n    \"area-columns-placeholder\": ['请选择', '请选择', '请选择'],\n    onSave: $setup.onSave,\n    onDelete: $setup.onDelete\n  }, null, 8 /* PROPS */, [\"area-list\", \"address-info\", \"onSave\", \"onDelete\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_Header","title","$setup","address","_component_van_address_edit","_ctx","areaList","addressInfo","onSave","onDelete"],"sources":["D:\\vue3-projects\\vue-waimai\\src\\views\\addressEdit\\addressEditIndex.vue"],"sourcesContent":["<template>\r\n    <Header :title=\"address\" />\r\n    <van-address-edit :area-list=\"areaList\" show-delete show-set-default show-search-result :address-info=\"addressInfo\"\r\n        :area-columns-placeholder=\"['请选择', '请选择', '请选择']\" @save=\"onSave\" @delete=\"onDelete\" />\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute } from \"vue-router\";\r\nimport Header from \"../../components/HeaderOf1.vue\"\r\nimport { reactive, toRefs, onMounted, computed } from \"vue\";\r\nexport default {\r\n    components: {\r\n        Header,\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n        const route = useRoute();\r\n        const data = reactive({\r\n            areaList: {\r\n                province_list: {\r\n                    110000: \"广东省\",\r\n                    120000: \"浙江省\",\r\n                    140000: \"江苏省\",\r\n                },\r\n                city_list: {\r\n                    110100: \"广州市\",\r\n                    110200: \"深圳市\",\r\n                    120100: \"杭州市\",\r\n                    120200: \"宁波市\",\r\n                    140100: \"南京市\",\r\n                },\r\n                county_list: {\r\n                    110101: \"天河区\",\r\n                    110102: \"海珠区\",\r\n                    120102: \"上城区\",\r\n                    130102: \"下城区\",\r\n                    140101: \"栖霞区\",\r\n                },\r\n            },\r\n            addressInfo: {},\r\n        });\r\n        const onSave = (content) => {\r\n            // 新增和编辑\r\n            if (route.query.type === 'add') {\r\n                store.commit('addAdress', content);\r\n            } else {\r\n\r\n            }\r\n        };\r\n        const onDelete = () => {\r\n        };\r\n        const init = () => {\r\n            store.state.userAddress.forEach((item) => {\r\n                if (item.id === Number(route.query.id)) {\r\n                    data.addressInfo = item;\r\n                }\r\n            });\r\n        };\r\n        const address = computed(() => {\r\n            return route.query.type === 'add' ? '地址新增' : '地址编辑';\r\n        })\r\n        onMounted(() => {\r\n            init();\r\n        });\r\n\r\n        return {\r\n            ...toRefs(data),\r\n            onSave,\r\n            onDelete,\r\n            address,\r\n        }\r\n\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/deep/ .van-button--danger {\r\n    background-color: #ffc400;\r\n    border-color: #ffc400;\r\n}\r\n\r\n/deep/ .van-switch--on {\r\n    background-color: #ffc400;\r\n}\r\n</style>"],"mappings":";;;;6DACIA,YAAA,CAA2BC,iBAAA;IAAlBC,KAAK,EAAEC,MAAA,CAAAC;EAAO,oCACvBJ,YAAA,CAC0FK,2BAAA;IADvE,WAAS,EAAEC,IAAA,CAAAC,QAAQ;IAAE,aAAW,EAAX,EAAW;IAAC,kBAAgB,EAAhB,EAAgB;IAAC,oBAAkB,EAAlB,EAAkB;IAAE,cAAY,EAAED,IAAA,CAAAE,WAAW;IAC7G,0BAAwB,EAAE,qBAAqB;IAAGC,MAAI,EAAEN,MAAA,CAAAM,MAAM;IAAGC,QAAM,EAAEP,MAAA,CAAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}