{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from '../../components/HeaderOf1.vue';\nimport { reactive, toRefs, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport { Dialog } from 'vant';\nexport default {\n  components: {\n    Header\n  },\n  setup() {\n    const data = reactive({\n      tel: '1234567890X',\n      name: 'Yeluzi',\n      totalPrice: 0\n    });\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const onEdit = () => {};\n    const initPrice = () => {\n      let price = 0;\n      if (store.state.orderList.length) {\n        store.state.orderList.forEach(item => {\n          price += item.price * item.num;\n        });\n      }\n      data.totalPrice = price;\n    };\n    // 初始化用户的地址\n    const initUser = () => {\n      store.state.userAddress.forEach(item => {\n        if (item.isDefault) {\n          data.name = item.name;\n          data.tel = item.tel;\n        }\n      });\n    };\n    // const handleCreateOrder = () => {\n    //     Dialog({\n    //         title: '提示',\n    //         message: '生成订单成功！',\n    //     }).then(() => {\n    //         // console.log(route.query.list);\n    //         // 要和购物车联系起来,过滤\n    //         let newList = store.state.cartList.filter((item) => {\n    //             return !route.query.list.includes(item.id + \"\");\n    //         });\n    //         store.commit('delete', newList);\n    //         router.push(\"/order\");\n    //     });\n    // }\n\n    const handleCreateOrder = () => {\n      Dialog({\n        title: '提示',\n        message: '生成订单成功！'\n      }).then(() => {\n        // 要和购物车联系起来,过滤\n        // 确保 route.query.list 是一个数组\n        const listIds = route.query.list ? Array.isArray(route.query.list) ? route.query.list : route.query.list.split(',') : [];\n        let newList = store.state.cartList.filter(item => {\n          // 确保 item.id 被转换为字符串\n          return !listIds.includes(item.id + \"\");\n        });\n        console.log(newList);\n        store.commit('delete', newList);\n        router.push(\"/order\");\n      });\n    };\n    onMounted(() => {\n      initPrice();\n      initUser();\n    });\n    return {\n      ...toRefs(data),\n      onEdit,\n      store,\n      handleCreateOrder\n    };\n  }\n};","map":{"version":3,"names":["Header","reactive","toRefs","onMounted","useStore","useRouter","useRoute","Dialog","components","setup","data","tel","name","totalPrice","store","router","route","onEdit","initPrice","price","state","orderList","length","forEach","item","num","initUser","userAddress","isDefault","handleCreateOrder","title","message","then","listIds","query","list","Array","isArray","split","newList","cartList","filter","includes","id","console","log","commit","push"],"sources":["D:\\vue3-projects\\vue-waimai\\src\\views\\createOrder\\CreateOrderIndex.vue"],"sourcesContent":["<template>\r\n    <div class=\"create-order\">\r\n        <Header title=\"生成订单\" />\r\n        <van-contact-card type=\"edit\" :tel=\"tel\" :name=\"name\" @click=\"onEdit\" />\r\n        <div class=\"content\">\r\n            <div v-for=\"(item, index) in store.state.orderList\" :key=\"index\">\r\n                <van-card :num=\"item.num\" :price=\"item.price\" :title=\"item.title\" :thumb=\"item.pic\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"pay-wrap\">\r\n            <div class=\"price\">\r\n                <span>商品金额</span>\r\n                <span>￥{{ totalPrice }}</span>\r\n            </div>\r\n            <van-button type=\"primary\" class=\"pay-btn\" block color=\"#ffc400\"\r\n                @click=\"handleCreateOrder\">生成订单</van-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from '../../components/HeaderOf1.vue';\r\nimport { reactive, toRefs, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { Dialog } from 'vant';\r\n\r\nexport default {\r\n    components: {\r\n        Header,\r\n    },\r\n    setup() {\r\n        const data = reactive({\r\n            tel: '1234567890X',\r\n            name: 'Yeluzi',\r\n            totalPrice: 0\r\n        });\r\n        const store = useStore();\r\n        const router = useRouter();\r\n        const route = useRoute();\r\n        const onEdit = () => { }\r\n        const initPrice = () => {\r\n            let price = 0;\r\n            if (store.state.orderList.length) {\r\n                store.state.orderList.forEach((item) => {\r\n                    price += item.price * item.num;\r\n                });\r\n            }\r\n            data.totalPrice = price;\r\n        };\r\n        // 初始化用户的地址\r\n        const initUser = () => {\r\n            store.state.userAddress.forEach((item) => {\r\n                if (item.isDefault) {\r\n                    data.name = item.name;\r\n                    data.tel = item.tel;\r\n                }\r\n            });\r\n        };\r\n        // const handleCreateOrder = () => {\r\n        //     Dialog({\r\n        //         title: '提示',\r\n        //         message: '生成订单成功！',\r\n        //     }).then(() => {\r\n        //         // console.log(route.query.list);\r\n        //         // 要和购物车联系起来,过滤\r\n        //         let newList = store.state.cartList.filter((item) => {\r\n        //             return !route.query.list.includes(item.id + \"\");\r\n        //         });\r\n        //         store.commit('delete', newList);\r\n        //         router.push(\"/order\");\r\n        //     });\r\n        // }\r\n\r\n        const handleCreateOrder = () => {\r\n            Dialog({\r\n                title: '提示',\r\n                message: '生成订单成功！',\r\n            }).then(() => {\r\n                // 要和购物车联系起来,过滤\r\n                // 确保 route.query.list 是一个数组\r\n                const listIds = route.query.list ? (Array.isArray(route.query.list) ? route.query.list : route.query.list.split(',')) : [];\r\n\r\n                let newList = store.state.cartList.filter((item) => {\r\n                    // 确保 item.id 被转换为字符串\r\n                    return !listIds.includes(item.id + \"\");\r\n                });\r\n                console.log(newList);\r\n                store.commit('delete', newList);\r\n                router.push(\"/order\");\r\n            });\r\n        };\r\n\r\n        onMounted(() => {\r\n            initPrice();\r\n            initUser();\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n            onEdit,\r\n            store,\r\n            handleCreateOrder\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.create-order {\r\n    display: flex;\r\n    flex-flow: column;\r\n    height: 100%;\r\n\r\n    .content {\r\n        flex: 1;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .pay-wrap {\r\n        padding: 10px 0;\r\n        width: 100%;\r\n        background: #fff;\r\n        border-top: 1px solid #e9e9e9;\r\n\r\n        >div {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            padding: 0 5%;\r\n            margin: 10px 0;\r\n            font-size: 14px;\r\n\r\n            span:nth-child(2) {\r\n                color: red;\r\n                font-size: 18px;\r\n            }\r\n        }\r\n\r\n        .pay-btn {\r\n            width: 90%;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAQ,QAAS,KAAK;AACjD,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SAASC,MAAK,QAAS,MAAM;AAE7B,eAAe;EACXC,UAAU,EAAE;IACRR;EACJ,CAAC;EACDS,KAAKA,CAAA,EAAG;IACJ,MAAMC,IAAG,GAAIT,QAAQ,CAAC;MAClBU,GAAG,EAAE,aAAa;MAClBC,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;IAChB,CAAC,CAAC;IACF,MAAMC,KAAI,GAAIV,QAAQ,CAAC,CAAC;IACxB,MAAMW,MAAK,GAAIV,SAAS,CAAC,CAAC;IAC1B,MAAMW,KAAI,GAAIV,QAAQ,CAAC,CAAC;IACxB,MAAMW,MAAK,GAAIA,CAAA,KAAM,CAAE;IACvB,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACpB,IAAIC,KAAI,GAAI,CAAC;MACb,IAAIL,KAAK,CAACM,KAAK,CAACC,SAAS,CAACC,MAAM,EAAE;QAC9BR,KAAK,CAACM,KAAK,CAACC,SAAS,CAACE,OAAO,CAAEC,IAAI,IAAK;UACpCL,KAAI,IAAKK,IAAI,CAACL,KAAI,GAAIK,IAAI,CAACC,GAAG;QAClC,CAAC,CAAC;MACN;MACAf,IAAI,CAACG,UAAS,GAAIM,KAAK;IAC3B,CAAC;IACD;IACA,MAAMO,QAAO,GAAIA,CAAA,KAAM;MACnBZ,KAAK,CAACM,KAAK,CAACO,WAAW,CAACJ,OAAO,CAAEC,IAAI,IAAK;QACtC,IAAIA,IAAI,CAACI,SAAS,EAAE;UAChBlB,IAAI,CAACE,IAAG,GAAIY,IAAI,CAACZ,IAAI;UACrBF,IAAI,CAACC,GAAE,GAAIa,IAAI,CAACb,GAAG;QACvB;MACJ,CAAC,CAAC;IACN,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMkB,iBAAgB,GAAIA,CAAA,KAAM;MAC5BtB,MAAM,CAAC;QACHuB,KAAK,EAAE,IAAI;QACXC,OAAO,EAAE;MACb,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACV;QACA;QACA,MAAMC,OAAM,GAAIjB,KAAK,CAACkB,KAAK,CAACC,IAAG,GAAKC,KAAK,CAACC,OAAO,CAACrB,KAAK,CAACkB,KAAK,CAACC,IAAI,IAAInB,KAAK,CAACkB,KAAK,CAACC,IAAG,GAAInB,KAAK,CAACkB,KAAK,CAACC,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,GAAI,EAAE;QAE1H,IAAIC,OAAM,GAAIzB,KAAK,CAACM,KAAK,CAACoB,QAAQ,CAACC,MAAM,CAAEjB,IAAI,IAAK;UAChD;UACA,OAAO,CAACS,OAAO,CAACS,QAAQ,CAAClB,IAAI,CAACmB,EAAC,GAAI,EAAE,CAAC;QAC1C,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;QACpBzB,KAAK,CAACgC,MAAM,CAAC,QAAQ,EAAEP,OAAO,CAAC;QAC/BxB,MAAM,CAACgC,IAAI,CAAC,QAAQ,CAAC;MACzB,CAAC,CAAC;IACN,CAAC;IAED5C,SAAS,CAAC,MAAM;MACZe,SAAS,CAAC,CAAC;MACXQ,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC;IACF,OAAO;MACH,GAAGxB,MAAM,CAACQ,IAAI,CAAC;MACfO,MAAM;MACNH,KAAK;MACLe;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}